{"version":3,"file":"static/js/656.84d6d39d.chunk.js","mappings":"mMA0BA,UAnB6B,SAAHA,GAAoD,IAAnCC,EAASD,EAApBE,UAASC,EAAAH,EAAaI,WAAAA,OAAU,IAAAD,EAAG,IAAGA,EAC9DE,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IAC3BC,GAAiBJ,EAAAA,EAAAA,IAAYK,EAAAA,IACnC,OAAIN,GAAeG,GAAiBE,EAGxBL,GAAeG,GAGlBI,EAAAA,EAAAA,KAACX,EAAS,KAFVW,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAIV,KAHrBW,EAAAA,GAAMC,MAAM,2CACLJ,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,aAMxB,C","sources":["components/Routes/PrivateRouteExtended.jsx"],"sourcesContent":["import React from 'react';\nimport toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectBMR, selectIsLoggedIn, selectIsRefreshing } from 'redux/selectors';\n\nconst PrivateRouteExtended = ({ component: Component, redirectTo = '/' }) => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const isBMRAvailable = useSelector(selectBMR);\n  if (isLoggedIn && !isRefreshing && !isBMRAvailable) {\n    toast.error('Please, fill out the form ðŸ¤”');\n    return <Navigate to='/profile' />;\n  } else if (!isLoggedIn && !isRefreshing) {\n    return <Navigate to={redirectTo} />;\n  } else {\n    return <Component />;\n  }\n};\n\nPrivateRouteExtended.propTypes = {\n  component: PropTypes.object.isRequired,\n  redirectTo: PropTypes.string,\n};\n\nexport default PrivateRouteExtended;\n"],"names":["_ref","Component","component","_ref$redirectTo","redirectTo","isLoggedIn","useSelector","selectIsLoggedIn","isRefreshing","selectIsRefreshing","isBMRAvailable","selectBMR","_jsx","Navigate","to","toast","error"],"sourceRoot":""}